stages:
  - build
  - pod
  - rs
  - hpa
  - serverless

cache:
  key: ${CI_BUILD_REF_NAME}
  paths:
    - bin/

build:
  stage: build
  only:
    - main
  script:
    - apt-get update
    - apt-get install -y gcc automake autoconf libtool make
    - make


pod:
  stage: pod
  # 将CICD限制在main分支上运行
  only:
    - main
  script:
    - apt-get update
    - apt-get install -y gcc automake autoconf libtool make
    - cd $CI_PROJECT_DIR
    - export PATH=$PATH:/usr/local/bin/etcd:/usr/local/go/bin
    - go env -w GOPROXY=https://goproxy.cn
    - make testPod
    - go test ./test/testPod

rs:
  stage: rs
  # 将CICD限制在main分支上运行
  only:
    - main
  script:
    - apt-get update
    - apt-get install -y gcc automake autoconf libtool make
    - cd $CI_PROJECT_DIR
    - export PATH=$PATH:/usr/local/bin/etcd:/usr/local/go/bin
    - go env -w GOPROXY=https://goproxy.cn
    - make testRS
    - go test ./test/testRs

hpa:
  stage: hpa
  # 将CICD限制在main分支上运行
  only:
    - main
  script:
    - apt-get update
    - apt-get install -y gcc automake autoconf libtool make
    - cd $CI_PROJECT_DIR
    - export PATH=$PATH:/usr/local/bin/etcd:/usr/local/go/bin
    - go env -w GOPROXY=https://goproxy.cn
    - make testHPA
    - go test ./test/testHPA

serverless:
  stage: serverless
  # 将CICD限制在main分支上运行
  only:
    - main
  script:
    - apt-get update
    - apt-get install -y gcc automake autoconf libtool make
    - cd $CI_PROJECT_DIR
    - export PATH=$PATH:/usr/local/bin/etcd:/usr/local/go/bin
    - go env -w GOPROXY=https://goproxy.cn
    - make testServerless
    - go test ./test/testServerless