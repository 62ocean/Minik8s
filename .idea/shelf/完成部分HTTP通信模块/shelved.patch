Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module k8s\r\n\r\ngo 1.20\r\n\r\nrequire (\r\n\r\n\r\n\tgithub.com/coreos/etcd v2.3.8+incompatible // indirect\r\n\tgo.etcd.io/etcd v2.3.8+incompatible // indirect\r\n\r\n\tgithub.com/Microsoft/go-winio v0.6.0 // indirect\r\n\r\n\tgithub.com/Microsoft/go-winio v0.6.0 // indirect\r\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect\r\n\r\n\tgithub.com/docker/distribution v2.8.1+incompatible // indirect\r\n\tgithub.com/docker/docker v23.0.3+incompatible // indirect\r\n\tgithub.com/docker/go-connections v0.4.0 // indirect\r\n\tgithub.com/docker/go-units v0.5.0 // indirect\r\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\r\n\tgithub.com/opencontainers/go-digest v1.0.0 // indirect\r\n\tgithub.com/opencontainers/image-spec v1.0.2 // indirect\r\n\tgithub.com/pkg/errors v0.9.1 // indirect\r\n\r\n\r\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\r\n\tgithub.com/urfave/cli/v2 v2.25.1 // indirect\r\n\tgithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 // indirect\r\n\r\n\tgolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4 // indirect\r\n\tgolang.org/x/net v0.0.0-20220722155237-a158d28d115b // indirect\r\n\tgolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f // indirect\r\n\tgolang.org/x/tools v0.1.12 // indirect\r\n\r\n\r\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
--- a/go.mod	(revision c4e401ba082f1622f7f572041ebf34725a4ba28c)
+++ b/go.mod	(date 1682153626161)
@@ -3,35 +3,38 @@
 go 1.20
 
 require (
-
+	github.com/docker/docker v23.0.3+incompatible
+	github.com/docker/go-connections v0.4.0
+	github.com/emicklei/go-restful/v3 v3.10.2
+	github.com/urfave/cli/v2 v2.25.1
+	go.etcd.io/etcd v2.3.8+incompatible
+	gopkg.in/yaml.v3 v3.0.1
+)
 
-	github.com/coreos/etcd v2.3.8+incompatible // indirect
-	go.etcd.io/etcd v2.3.8+incompatible // indirect
-
+require (
 	github.com/Microsoft/go-winio v0.6.0 // indirect
-
-	github.com/Microsoft/go-winio v0.6.0 // indirect
+	github.com/coreos/etcd v2.3.8+incompatible // indirect
 	github.com/cpuguy83/go-md2man/v2 v2.0.2 // indirect
-
 	github.com/docker/distribution v2.8.1+incompatible // indirect
-	github.com/docker/docker v23.0.3+incompatible // indirect
-	github.com/docker/go-connections v0.4.0 // indirect
 	github.com/docker/go-units v0.5.0 // indirect
 	github.com/gogo/protobuf v1.3.2 // indirect
+	github.com/golang/protobuf v1.5.3 // indirect
+	github.com/google/uuid v1.3.0 // indirect
+	github.com/json-iterator/go v1.1.12 // indirect
+	github.com/moby/term v0.0.0-20221205130635-1aeaba878587 // indirect
+	github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 // indirect
+	github.com/modern-go/reflect2 v1.0.2 // indirect
+	github.com/morikuni/aec v1.0.0 // indirect
 	github.com/opencontainers/go-digest v1.0.0 // indirect
 	github.com/opencontainers/image-spec v1.0.2 // indirect
 	github.com/pkg/errors v0.9.1 // indirect
-
-
 	github.com/russross/blackfriday/v2 v2.1.0 // indirect
-	github.com/urfave/cli/v2 v2.25.1 // indirect
+	github.com/stretchr/testify v1.8.2 // indirect
 	github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 // indirect
-
 	golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4 // indirect
 	golang.org/x/net v0.0.0-20220722155237-a158d28d115b // indirect
-	golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f // indirect
+	golang.org/x/sys v0.1.0 // indirect
+	golang.org/x/time v0.3.0 // indirect
 	golang.org/x/tools v0.1.12 // indirect
-
-
-	gopkg.in/yaml.v3 v3.0.1 // indirect
+	gotest.tools/v3 v3.4.0 // indirect
 )
Index: cmd/apiserver/main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmd/apiserver/main.go b/cmd/apiserver/main.go
new file mode 100644
--- /dev/null	(date 1682154641003)
+++ b/cmd/apiserver/main.go	(date 1682154641003)
@@ -0,0 +1,26 @@
+package main
+
+import (
+	"fmt"
+	"k8s/pkg/apiserver"
+	"log"
+	"os"
+	"time"
+)
+
+func init() {
+	logFile, err := os.OpenFile("log/"+time.Now().Format("15_04_05")+".log", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644)
+	if err != nil {
+		fmt.Println("open log file failed, err:", err)
+		return
+	}
+	log.SetOutput(logFile)
+	log.SetFlags(log.Lshortfile | log.Lmicroseconds)
+	log.SetPrefix("[APIServer]")
+}
+
+func main() {
+	//etcd.EtcdTest()
+	server := apiserver.CreateAPIServer()
+	server.StartServer()
+}
Index: pkg/kubelet/kubelet.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kubelet\r\n\r\ntype Kubelet struct {\r\n}\r\n\r\n// Run kubelet运行的入口函数\r\nfunc (kl *Kubelet) Run() {\r\n\r\n}\r\n\r\n// NewKubelet kubelet对象的构造函数\r\nfunc NewKubelet() (*Kubelet, error) {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/kubelet/kubelet.go b/pkg/kubelet/kubelet.go
--- a/pkg/kubelet/kubelet.go	(revision c4e401ba082f1622f7f572041ebf34725a4ba28c)
+++ b/pkg/kubelet/kubelet.go	(date 1682210393385)
@@ -1,6 +1,12 @@
 package kubelet
 
+import "k8s/pkg/kubelet/HTTPClient"
+
+// TODO:记得修改host到对应ip
+const serverHost = "localhost:8080"
+
 type Kubelet struct {
+	client *HTTPClient.Client
 }
 
 // Run kubelet运行的入口函数
@@ -10,5 +16,8 @@
 
 // NewKubelet kubelet对象的构造函数
 func NewKubelet() (*Kubelet, error) {
-
+	client := HTTPClient.CreateHTTPClient(serverHost
+	// TODO 构建node对象传递到APIserver处
+	client.Post("/node/create")
+	return nil, nil
 }
Index: pkg/apiserver/apiserver.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package apiserver\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"k8s/pkg/etcd\"\r\n)\r\n\r\nfunc StartServer() {\r\n\t//etcd.EtcdTest()\r\n\tetcd.EtcdInit()\r\n}\r\n\r\nfunc CreatePod() {\r\n\tfmt.Printf(\"apiserver: create pod\\n\")\r\n}\r\n\r\nfunc DeletePod() {\r\n\tfmt.Printf(\"apiserver: delete pod\\n\")\r\n}\r\n\r\nfunc DescribePod() {\r\n\tfmt.Printf(\"apiserver: describe pod\\n\")\r\n}\r\n\r\nfunc DescribeService() {\r\n\tfmt.Printf(\"apiserver: describe service\\n\")\r\n}\r\n\r\nfunc EtcdGetOne(key string) string {\r\n\tres := etcd.GetOne(key)\r\n\tif res == \"\" {\r\n\t\tfmt.Printf(\"get key %s from etcd failed\", key)\r\n\t}\r\n\treturn res\r\n}\r\n\r\nfunc EtcdGetDirectory(prefix string) map[string]string {\r\n\tres := etcd.GetDirectory(prefix)\r\n\tif res == nil {\r\n\t\tfmt.Printf(\"get directory %s from etcd failed\", prefix)\r\n\t}\r\n\treturn res\r\n}\r\n\r\nfunc EtcdPut(key string, val string) bool {\r\n\tres := etcd.Put(key, val)\r\n\treturn res\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/apiserver/apiserver.go b/pkg/apiserver/apiserver.go
--- a/pkg/apiserver/apiserver.go	(revision c4e401ba082f1622f7f572041ebf34725a4ba28c)
+++ b/pkg/apiserver/apiserver.go	(date 1682158019493)
@@ -2,12 +2,36 @@
 
 import (
 	"fmt"
+	"github.com/emicklei/go-restful/v3"
+	"k8s/pkg/apiserver/handlers"
 	"k8s/pkg/etcd"
+	"log"
+	"net/http"
 )
 
-func StartServer() {
-	//etcd.EtcdTest()
+type APIServer struct {
+	wsContainer *restful.Container
+}
+
+// CreateAPIServer 初始化APISevrer结构体中的内容
+func CreateAPIServer() *APIServer {
+	wsContainer := restful.NewContainer()
+	wsContainer.Router(restful.CurlyRouter{})
+	handlers.RegisterNode(wsContainer)
+	server := APIServer{
+		wsContainer: wsContainer,
+	}
+
+	return &server
+}
+
+// StartServer 开始监听相关端口请求
+func (s *APIServer) StartServer() {
 	etcd.EtcdInit()
+	log.Printf("start listening on localhost:8080")
+	server := &http.Server{Addr: ":8080", Handler: s.wsContainer}
+	defer server.Close()
+	log.Fatal(server.ListenAndServe())
 }
 
 func CreatePod() {
Index: cmd/kubelet/main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\t\"k8s/pkg/apiserver\"\r\n\t\"k8s/pkg/kubectl\"\r\n\t\"fmt\"\r\n<<<<<<< HEAD\r\n\t\"gopkg.in/yaml.v3\"\r\n\tpod2 \"k8s/pkg/api/pod\"\r\n=======\r\n>>>>>>> origin/apiserver\r\n\t\"log\"\r\n\t\"os\"\r\n\t\"time\"\r\n)\r\n\r\nfunc init() {\r\n\tlogFile, err := os.OpenFile(\"log/\"+time.Now().Format(\"15_04_05\")+\".log\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644)\r\n<<<<<<< HEAD\r\n\tif err != nil {\r\n\t\tfmt.Println(\"open log file failed, err:\", err)\r\n\t\treturn\r\n\t}\r\n\tlog.SetOutput(logFile)\r\n\tlog.SetFlags(log.Lshortfile | log.Lmicroseconds)\r\n\tlog.SetPrefix(\"[Pod]\")\r\n}\r\n\r\nfunc main() {\r\n\t// 解析pod的yaml配置文件\r\n\tdataBytes, err := os.ReadFile(\"pkg/api/kubelet/pod/podConfigTest.yaml\")\r\n=======\r\n>>>>>>> origin/apiserver\r\n\tif err != nil {\r\n\t\tfmt.Println(\"open log file failed, err:\", err)\r\n\t\treturn\r\n\t}\r\n<<<<<<< HEAD\r\n\tvar podData pod2.Pod\r\n\terr2 := yaml.Unmarshal(dataBytes, &podData)\r\n\tif err2 != nil {\r\n\t\tfmt.Println(\"解析 yaml 文件失败：\", err)\r\n\t}\r\n\tfmt.Println(podData)\r\n\r\n\t// 根据配置文件创建容器\r\n\terr = pod2.CreatePod(podData)\r\n\tif err != nil {\r\n\t\tfmt.Println(err.Error())\r\n\t}\r\n\r\n=======\r\n\tlog.SetOutput(logFile)\r\n\tlog.SetFlags(log.Lshortfile | log.Lmicroseconds)\r\n}\r\n\r\nfunc main() {\r\n\t//etcd.EtcdTest()\r\n\tapiserver.StartServer()\r\n\tkubectl.CmdExec()\r\n\tfmt.Println(\"hello world\")\r\n\tlog.Println(\"test Log!\")\r\n>>>>>>> origin/apiserver\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmd/kubelet/main.go b/cmd/kubelet/main.go
--- a/cmd/kubelet/main.go	(revision c4e401ba082f1622f7f572041ebf34725a4ba28c)
+++ b/cmd/kubelet/main.go	(date 1682142721912)
@@ -1,14 +1,9 @@
 package main
 
 import (
-	"k8s/pkg/apiserver"
-	"k8s/pkg/kubectl"
 	"fmt"
-<<<<<<< HEAD
 	"gopkg.in/yaml.v3"
 	pod2 "k8s/pkg/api/pod"
-=======
->>>>>>> origin/apiserver
 	"log"
 	"os"
 	"time"
@@ -16,7 +11,6 @@
 
 func init() {
 	logFile, err := os.OpenFile("log/"+time.Now().Format("15_04_05")+".log", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644)
-<<<<<<< HEAD
 	if err != nil {
 		fmt.Println("open log file failed, err:", err)
 		return
@@ -29,13 +23,6 @@
 func main() {
 	// 解析pod的yaml配置文件
 	dataBytes, err := os.ReadFile("pkg/api/kubelet/pod/podConfigTest.yaml")
-=======
->>>>>>> origin/apiserver
-	if err != nil {
-		fmt.Println("open log file failed, err:", err)
-		return
-	}
-<<<<<<< HEAD
 	var podData pod2.Pod
 	err2 := yaml.Unmarshal(dataBytes, &podData)
 	if err2 != nil {
@@ -48,17 +35,4 @@
 	if err != nil {
 		fmt.Println(err.Error())
 	}
-
-=======
-	log.SetOutput(logFile)
-	log.SetFlags(log.Lshortfile | log.Lmicroseconds)
-}
-
-func main() {
-	//etcd.EtcdTest()
-	apiserver.StartServer()
-	kubectl.CmdExec()
-	fmt.Println("hello world")
-	log.Println("test Log!")
->>>>>>> origin/apiserver
 }
Index: go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\ngithub.com/coreos/etcd v2.3.8+incompatible h1:Lkp5dgqMANTjq0UW74OP1H8yCDQT0In4jrw6xfcNlGE=\r\ngithub.com/coreos/etcd v2.3.8+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=\r\ngo.etcd.io/etcd v2.3.8+incompatible h1:m5lZwb9yKkh27IFgPQWTdiaG/9waG7AWy0NSHedy3Mk=\r\ngo.etcd.io/etcd v2.3.8+incompatible/go.mod h1:yaeTdrJi5lOmYerz05bd8+V7KubZs8YSFZfzsF9A6aI=\r\ngithub.com/Microsoft/go-winio v0.6.0 h1:slsWYD/zyx7lCXoZVlvQrj0hPTM1HI4+v1sIda2yDvg=\r\ngithub.com/Microsoft/go-winio v0.6.0/go.mod h1:cTAf44im0RAYeL23bpB+fzCyDH2MJiz2BO69KH/soAE=\r\n\r\ngithub.com/Microsoft/go-winio v0.6.0 h1:slsWYD/zyx7lCXoZVlvQrj0hPTM1HI4+v1sIda2yDvg=\r\ngithub.com/Microsoft/go-winio v0.6.0/go.mod h1:cTAf44im0RAYeL23bpB+fzCyDH2MJiz2BO69KH/soAE=\r\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=\r\ngithub.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\r\n\r\ngithub.com/docker/distribution v2.8.1+incompatible h1:Q50tZOPR6T/hjNsyc9g8/syEs6bk8XXApsHjKukMl68=\r\ngithub.com/docker/distribution v2.8.1+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=\r\ngithub.com/docker/docker v23.0.3+incompatible h1:9GhVsShNWz1hO//9BNg/dpMnZW25KydO4wtVxWAIbho=\r\ngithub.com/docker/docker v23.0.3+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\r\ngithub.com/docker/go-connections v0.4.0 h1:El9xVISelRB7BuFusrZozjnkIM5YnzCViNKohAFqRJQ=\r\ngithub.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=\r\ngithub.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=\r\ngithub.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=\r\ngithub.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=\r\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\r\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\r\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\r\ngithub.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=\r\ngithub.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=\r\ngithub.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=\r\ngithub.com/opencontainers/image-spec v1.0.2/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=\r\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\r\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\r\n\r\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\r\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\r\ngithub.com/urfave/cli/v2 v2.25.1 h1:zw8dSP7ghX0Gmm8vugrs6q9Ku0wzweqPyshy+syu9Gw=\r\ngithub.com/urfave/cli/v2 v2.25.1/go.mod h1:GHupkWPMM0M/sj1a2b4wUrWBPzazNrIjouW6fmdJLxc=\r\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=\r\ngithub.com/xrash/smetrics v0.0.0-20201216005158-039620a65673/go.mod h1:N3UwUGtsrSj3ccvlPHLoLsHnpR27oXr4ZE984MbSER8=\r\n>>>>>>> kubectl-tool\r\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\r\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\r\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\r\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\r\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\r\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\r\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\r\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4 h1:6zppjxzCulZykYSLyVDYbneBfbaBIQPYMevg0bEwv2s=\r\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\r\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\r\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\r\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\r\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\r\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b h1:PxfKdU9lEEDYjdIzOtC4qFWgkU2rGHdKlKowJSMN9h0=\r\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\r\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\r\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\r\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\r\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\r\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f h1:v4INt8xihDGvnrfjMDVXGxw9wrfxYyCjk0KbXjhR55s=\r\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\r\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\r\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\r\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\r\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\r\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\r\ngolang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=\r\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\r\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\r\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\r\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.sum b/go.sum
--- a/go.sum	(revision c4e401ba082f1622f7f572041ebf34725a4ba28c)
+++ b/go.sum	(date 1682153626162)
@@ -1,16 +1,13 @@
-
-github.com/coreos/etcd v2.3.8+incompatible h1:Lkp5dgqMANTjq0UW74OP1H8yCDQT0In4jrw6xfcNlGE=
-github.com/coreos/etcd v2.3.8+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=
-go.etcd.io/etcd v2.3.8+incompatible h1:m5lZwb9yKkh27IFgPQWTdiaG/9waG7AWy0NSHedy3Mk=
-go.etcd.io/etcd v2.3.8+incompatible/go.mod h1:yaeTdrJi5lOmYerz05bd8+V7KubZs8YSFZfzsF9A6aI=
-github.com/Microsoft/go-winio v0.6.0 h1:slsWYD/zyx7lCXoZVlvQrj0hPTM1HI4+v1sIda2yDvg=
-github.com/Microsoft/go-winio v0.6.0/go.mod h1:cTAf44im0RAYeL23bpB+fzCyDH2MJiz2BO69KH/soAE=
-
+github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=
 github.com/Microsoft/go-winio v0.6.0 h1:slsWYD/zyx7lCXoZVlvQrj0hPTM1HI4+v1sIda2yDvg=
 github.com/Microsoft/go-winio v0.6.0/go.mod h1:cTAf44im0RAYeL23bpB+fzCyDH2MJiz2BO69KH/soAE=
+github.com/coreos/etcd v2.3.8+incompatible h1:Lkp5dgqMANTjq0UW74OP1H8yCDQT0In4jrw6xfcNlGE=
+github.com/coreos/etcd v2.3.8+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=
 github.com/cpuguy83/go-md2man/v2 v2.0.2 h1:p1EgwI/C7NhT0JmVkwCD2ZBK8j4aeHQX2pMHHBfMQ6w=
 github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=
-
+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
 github.com/docker/distribution v2.8.1+incompatible h1:Q50tZOPR6T/hjNsyc9g8/syEs6bk8XXApsHjKukMl68=
 github.com/docker/distribution v2.8.1+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=
 github.com/docker/docker v23.0.3+incompatible h1:9GhVsShNWz1hO//9BNg/dpMnZW25KydO4wtVxWAIbho=
@@ -19,26 +16,56 @@
 github.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=
 github.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=
 github.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=
+github.com/emicklei/go-restful/v3 v3.10.2 h1:hIovbnmBTLjHXkqEBUz3HGpXZdM7ZrE9fJIZIqlJLqE=
+github.com/emicklei/go-restful/v3 v3.10.2/go.mod h1:6n3XBCmQQb25CM2LCACGz8ukIrRry+4bhvbpWn3mrbc=
 github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=
 github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=
+github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
+github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=
+github.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
+github.com/google/go-cmp v0.5.5 h1:Khx7svrCpmxxtHBq5j2mp/xVjsi8hQMfNLvJFAlrGgU=
+github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
+github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
+github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=
+github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
+github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=
+github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=
 github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=
 github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=
+github.com/moby/term v0.0.0-20221205130635-1aeaba878587 h1:HfkjXDfhgVaN5rmueG8cL8KKeFNecRCXFhaJ2qZ5SKA=
+github.com/moby/term v0.0.0-20221205130635-1aeaba878587/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=
+github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 h1:ZqeYNhU3OHLH3mGKHDcjJRFFRrJa6eAM5H+CtDdOsPc=
+github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
+github.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=
+github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=
+github.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=
+github.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=
 github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=
 github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=
 github.com/opencontainers/image-spec v1.0.2 h1:9yCKha/T5XdGtO0q9Q9a6T5NUCsTn/DrBg0D7ufOcFM=
 github.com/opencontainers/image-spec v1.0.2/go.mod h1:BtxoFyWECRxE4U/7sNtV5W15zMzWCbyJoFRP3s7yZA0=
 github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=
 github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
-
+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
 github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=
 github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
+github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=
+github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=
+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
+github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
+github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
+github.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=
+github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=
 github.com/urfave/cli/v2 v2.25.1 h1:zw8dSP7ghX0Gmm8vugrs6q9Ku0wzweqPyshy+syu9Gw=
 github.com/urfave/cli/v2 v2.25.1/go.mod h1:GHupkWPMM0M/sj1a2b4wUrWBPzazNrIjouW6fmdJLxc=
 github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=
 github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673/go.mod h1:N3UwUGtsrSj3ccvlPHLoLsHnpR27oXr4ZE984MbSER8=
->>>>>>> kubectl-tool
 github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
 github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
+go.etcd.io/etcd v2.3.8+incompatible h1:m5lZwb9yKkh27IFgPQWTdiaG/9waG7AWy0NSHedy3Mk=
+go.etcd.io/etcd v2.3.8+incompatible/go.mod h1:yaeTdrJi5lOmYerz05bd8+V7KubZs8YSFZfzsF9A6aI=
 golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
 golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
 golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
@@ -58,20 +85,31 @@
 golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
 golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
 golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f h1:v4INt8xihDGvnrfjMDVXGxw9wrfxYyCjk0KbXjhR55s=
-golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
+golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
+golang.org/x/sys v0.1.0 h1:kunALQeHf1/185U1i0GOB/fy1IPRDDpuoOOqRReG57U=
+golang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
+golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=
+golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
 golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
 golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
 golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
 golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
+golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=
 golang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=
 golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
 golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
 golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
+google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
+google.golang.org/protobuf v1.26.0 h1:bxAC2xTBsZGibn2RTntX0oH50xLsqy1OxA9tTL3p/lk=
+google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
+gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=
 gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
+gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
 gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
 gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
+gotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=
+gotest.tools/v3 v3.4.0/go.mod h1:CtbdzLSsqVhDgMtKsx03ird5YTGB3ar27v0u/yKBW5g=
Index: pkg/kubelet/HTTPClient/client.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/kubelet/HTTPClient/client.go b/pkg/kubelet/HTTPClient/client.go
new file mode 100644
--- /dev/null	(date 1682209091585)
+++ b/pkg/kubelet/HTTPClient/client.go	(date 1682209091585)
@@ -0,0 +1,82 @@
+package HTTPClient
+
+import (
+	"bytes"
+	"fmt"
+	"io"
+	"io/ioutil"
+	"net/http"
+	"strings"
+	"time"
+)
+
+type Client struct {
+	Host string // ip and port
+	http *http.Client
+}
+
+func CreateHTTPClient(serverHost string) *Client {
+	ret := Client{
+		Host: serverHost,
+		// timeout: 5s
+		http: &http.Client{Timeout: 5 * time.Second},
+	}
+	return &ret
+}
+
+func (c *Client) Get(url string) string {
+	resp, err := c.http.Get(c.Host + url)
+	if err != nil {
+		panic(err)
+	}
+	defer resp.Body.Close()
+	var buffer [512]byte
+	result := bytes.NewBuffer(nil)
+	for {
+		n, err := resp.Body.Read(buffer[0:])
+		result.Write(buffer[0:n])
+		if err != nil && err == io.EOF {
+			break
+		} else if err != nil {
+			panic(err)
+		}
+	}
+
+	return result.String()
+}
+
+func (c *Client) Post(url string, requestBody string) string {
+	res, err := c.http.Post(c.Host+url, "application/json", strings.NewReader(string(requestBody)))
+
+	if err != nil {
+		fmt.Println(err.Error())
+		return ""
+	}
+	defer res.Body.Close()
+
+	body, err := ioutil.ReadAll(res.Body)
+
+	if err != nil {
+		fmt.Println(err.Error())
+		return ""
+	}
+	return string(body)
+}
+
+func (c *Client) Del(url string) string {
+	req, _ := http.NewRequest("DELETE", c.Host+url, nil)
+	res, err1 := c.http.Do(req)
+	if err1 != nil {
+		fmt.Println(err1.Error())
+		return ""
+	}
+
+	defer res.Body.Close()
+	body, err := ioutil.ReadAll(res.Body)
+	if err != nil {
+		fmt.Println(err.Error())
+		return ""
+	}
+
+	return string(body)
+}
Index: pkg/apiserver/Data Format.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/apiserver/Data Format.md b/pkg/apiserver/Data Format.md
new file mode 100644
--- /dev/null	(date 1682153710223)
+++ b/pkg/apiserver/Data Format.md	(date 1682153710223)
@@ -0,0 +1,78 @@
+### ETCD存储各个API对象的格式
+> 依据K8S原本实现的格式进行存储
+
+所有资源的组织格式都是：
+```
+/registry/{resource_name}/{namespace}/{resource_instance}
+```
+各个资源的id使用google/uuid包来生成，记得提前运行如下命令
+```bash
+go get github.com/google/uuid
+```
+
+#### 集群数据
+##### node
+
+（node原来被叫做minions）
+
+```
+/registry/minions/<node-ip-1>
+/registry/minions/<node-ip-2>
+/registry/minions/<node-ip-3>
+```
+
+#### k8s对象数据
+
+##### namespace
+
+```bash
+/registry/namespaces/default
+/registry/namespaces/game
+/registry/namespaces/kube-node-lease
+/registry/namespaces/kube-public
+/registry/namespaces/kube-system
+```
+
+
+
+##### k8s常见对象：
+
+```bash
+/registry/{resource}/{namespace}/{resource_name}
+```
+
+```bash
+# deployment
+/registry/deployments/default/game-2048
+/registry/deployments/kube-system/prometheus-operator
+
+# replicasets
+/registry/replicasets/default/game-2048-c7d589ccf
+
+# pod
+/registry/pods/default/game-2048-c7d589ccf-8lsbw
+
+# statefulsets
+/registry/statefulsets/kube-system/prometheus-k8s
+
+# daemonsets
+/registry/daemonsets/kube-system/kube-proxy
+
+# secrets
+/registry/secrets/default/default-token-tbfmb
+
+# serviceaccounts
+/registry/serviceaccounts/default/default
+```
+
+
+
+##### service
+
+```bash
+# service
+/registry/services/specs/default/game-2048
+
+# endpoints
+/registry/services/endpoints/default/game-2048
+```
Index: pkg/apiserver/handlers/nodeHandler.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/apiserver/handlers/nodeHandler.go b/pkg/apiserver/handlers/nodeHandler.go
new file mode 100644
--- /dev/null	(date 1682209091302)
+++ b/pkg/apiserver/handlers/nodeHandler.go	(date 1682209091302)
@@ -0,0 +1,41 @@
+package handlers
+
+import (
+	"fmt"
+	"github.com/emicklei/go-restful/v3"
+	"k8s/pkg/etcd"
+	"net/http"
+)
+
+func RegisterNode(container *restful.Container) {
+	ws := new(restful.WebService)
+	ws.Path("/node").
+		Consumes(restful.MIME_XML, restful.MIME_JSON).
+		Produces(restful.MIME_JSON, restful.MIME_XML)
+	ws.Route(ws.POST("/create").To(CreateNode))
+	ws.Route(ws.GET("/get").To(GetNode))
+	ws.Route(ws.POST("/update").To(UpdateNode))
+	ws.Route(ws.DELETE("/remove").To(RemoveNode))
+	container.Add(ws)
+}
+
+func CreateNode(request *restful.Request, response *restful.Response) {
+	fmt.Println(request.Request.Host)
+	fmt.Println(request.Request.Header)
+	fmt.Println(request.Request.Form)
+	// TODO: 获取请求发送者的ip
+	ip := "127.0.0.1"
+	key := "/registry/minions/" + ip
+	val := request.PathParameter("info")
+	res := etcd.Put(key, val)
+	response.AddHeader("Content-Type", "text/plain")
+	if !res {
+		response.WriteErrorString(http.StatusNotFound, "node could not be persisted")
+	} else {
+		response.WriteEntity("ok")
+	}
+}
+
+func GetNode(request *restful.Request, response *restful.Response)    {}
+func UpdateNode(request *restful.Request, response *restful.Response) {}
+func RemoveNode(request *restful.Request, response *restful.Response) {}
Index: pkg/apiserver/url/types.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/apiserver/url/types.go b/pkg/apiserver/url/types.go
new file mode 100644
--- /dev/null	(date 1682149053443)
+++ b/pkg/apiserver/url/types.go	(date 1682149053443)
@@ -0,0 +1,10 @@
+package url
+
+type Node struct {
+	Id   string
+	Name string
+}
+
+type NodeResource struct {
+	users map[string]Node
+}
